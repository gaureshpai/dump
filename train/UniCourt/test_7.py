#!/usr/bin/env python3

import sys
import os

# Add the directory containing 7.py to the path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

sys.path.insert(0, '.')
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from py7 import solve

def test_case_1():
    """First test case from error.txt"""
    input_grid = [
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 1, 4, 4, 4, 4, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 1, 4, 4, 4, 4, 1, 0, 0, 0, 0, 1, 1, 3, 3, 1, 1, 0, 0, 0, 0],
        [0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 1, 4, 4, 4, 4, 1, 0, 0, 0, 0, 1, 1, 3, 3, 1, 1, 0, 0, 0, 0],
        [0, 1, 2, 2, 2, 2, 1, 0, 0, 0, 1, 4, 4, 4, 4, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 3, 3, 1, 1, 0, 0, 0, 1, 1, 6, 6, 1, 1, 0, 0, 0, 0, 1, 1, 9, 9, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 3, 3, 1, 1, 0, 0, 0, 1, 1, 6, 6, 1, 1, 0, 0, 0, 0, 1, 1, 9, 9, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 5, 5, 5, 5, 1, 0, 0, 0, 0],
        [0, 1, 1, 9, 9, 1, 1, 0, 0, 0, 1, 1, 4, 4, 1, 1, 0, 0, 0, 0, 1, 5, 5, 5, 5, 1, 0, 0, 0, 0],
        [0, 1, 1, 9, 9, 1, 1, 0, 0, 0, 1, 1, 4, 4, 1, 1, 0, 0, 0, 0, 1, 5, 5, 5, 5, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 5, 5, 5, 5, 1, 0, 0, 0, 0],
        [0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 2, 0, 4, 0, 3, 0, 9, 0, 5, 0, 4, 0, 6, 0, 3, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ]
    
    expected_output = [
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,1,2,2,2,2,1,2,2,2,1,4,4,4,4,1,4,4,4,4,1,1,1,1,1,1,0,0,0,0],
        [0,1,2,2,2,2,1,2,2,2,1,4,4,4,4,1,4,4,4,4,1,1,3,3,1,1,0,0,0,0],
        [0,1,2,2,2,2,1,2,2,2,1,4,4,4,4,1,4,4,4,4,1,1,3,3,1,1,0,0,0,0],
        [0,1,2,2,2,2,1,2,2,2,1,4,4,4,4,1,4,4,4,4,1,1,1,1,1,1,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,1,1,3,3,1,1,6,6,6,1,1,6,6,1,1,0,0,0,0,1,1,9,9,1,1,0,0,0,0],
        [0,1,1,3,3,1,1,6,6,6,1,1,6,6,1,1,0,0,0,0,1,1,9,9,1,1,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,0,0,3,3,0,0,0,0,0,0,0,4,4,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,5,5,5,5,1,5,5,5,5,1,0,0,0,0],
        [0,1,1,9,9,1,1,0,0,0,1,1,4,4,1,1,5,5,5,5,1,5,5,5,5,1,0,0,0,0],
        [0,1,1,9,9,1,1,0,0,0,1,1,4,4,1,1,5,5,5,5,1,5,5,5,5,1,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,5,5,5,5,1,5,5,5,5,1,0,0,0,0],
        [0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,2,0,4,0,3,0,9,0,5,0,4,0,6,0,3,0,9,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ]
    
    result = solve(input_grid)
    
    print("Test Case 1:")
    print("Expected match:", result == expected_output)
    
    if result != expected_output:
        print("Differences found:")
        for i, (r1, r2) in enumerate(zip(result, expected_output)):
            for j, (c1, c2) in enumerate(zip(r1, r2)):
                if c1 != c2:
                    print(f"  Row {i}, Col {j}: got {c1}, expected {c2}")

if __name__ == "__main__":
    test_case_1()
